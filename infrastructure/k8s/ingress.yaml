apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: msp-platform-ingress
  namespace: msp-platform
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - msp.example.com
    - awx.msp.example.com
    - vault.msp.example.com
    - grafana.msp.example.com
    secretName: msp-platform-tls
  rules:
  - host: msp.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: msp-dashboard
            port:
              number: 80
  - host: awx.msp.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: awx-web
            port:
              number: 8052
  - host: vault.msp.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vault
            port:
              number: 8200
  - host: grafana.msp.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: msp-platform-netpol
  namespace: msp-platform
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: msp-monitoring
    - podSelector:
        matchLabels:
          app: awx-web
    - podSelector:
        matchLabels:
          app: awx-task
    - podSelector:
        matchLabels:
          app: vault
    - podSelector:
        matchLabels:
          app: postgres-primary
    - podSelector:
        matchLabels:
          app: redis-cluster
    ports:
    - protocol: TCP
      port: 8052
    - protocol: TCP
      port: 8200
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  - to:
    - namespaceSelector:
        matchLabels:
          name: msp-platform
    - namespaceSelector:
        matchLabels:
          name: msp-monitoring
    ports:
    - protocol: TCP
      port: 8052
    - protocol: TCP
      port: 8200
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 9093
---
apiVersion: v1
kind: Service
metadata:
  name: msp-dashboard
  namespace: msp-platform
spec:
  selector:
    app: msp-dashboard
  ports:
    - port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: msp-dashboard
  namespace: msp-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: msp-dashboard
  template:
    metadata:
      labels:
        app: msp-dashboard
    spec:
      containers:
      - name: dashboard
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: dashboard-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: dashboard-content
          mountPath: /usr/share/nginx/html
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 101
      volumes:
      - name: dashboard-config
        configMap:
          name: dashboard-config
      - name: dashboard-content
        configMap:
          name: dashboard-content
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dashboard-config
  namespace: msp-platform
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        sendfile on;
        tcp_nopush on;
        keepalive_timeout 65;
        gzip on;
        
        server {
            listen 80;
            server_name localhost;
            
            location / {
                root /usr/share/nginx/html;
                index index.html index.htm;
            }
            
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dashboard-content
  namespace: msp-platform
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>MSP Platform Dashboard</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 20px;
                background-color: #f5f5f5;
            }
            .container {
                max-width: 1200px;
                margin: 0 auto;
                background-color: white;
                padding: 30px;
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }
            h1 {
                color: #333;
                text-align: center;
                margin-bottom: 30px;
            }
            .services {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                gap: 20px;
                margin-top: 30px;
            }
            .service-card {
                background: #f8f9fa;
                padding: 20px;
                border-radius: 8px;
                border-left: 4px solid #007bff;
            }
            .service-card h3 {
                margin-top: 0;
                color: #007bff;
            }
            .service-card a {
                color: #007bff;
                text-decoration: none;
            }
            .service-card a:hover {
                text-decoration: underline;
            }
            .status {
                display: inline-block;
                padding: 4px 8px;
                border-radius: 4px;
                font-size: 12px;
                font-weight: bold;
                text-transform: uppercase;
            }
            .status.online {
                background-color: #d4edda;
                color: #155724;
            }
            .status.offline {
                background-color: #f8d7da;
                color: #721c24;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>MSP Platform Dashboard</h1>
            <p>Welcome to the MSP Ansible Infrastructure Management Platform</p>
            
            <div class="services">
                <div class="service-card">
                    <h3>Ansible AWX</h3>
                    <p>Automation orchestration and job management</p>
                    <p><a href="https://awx.msp.example.com">Access AWX</a></p>
                    <span class="status online">Online</span>
                </div>
                
                <div class="service-card">
                    <h3>HashiCorp Vault</h3>
                    <p>Secrets management and PKI infrastructure</p>
                    <p><a href="https://vault.msp.example.com">Access Vault</a></p>
                    <span class="status online">Online</span>
                </div>
                
                <div class="service-card">
                    <h3>Grafana Monitoring</h3>
                    <p>Infrastructure monitoring and alerting</p>
                    <p><a href="https://grafana.msp.example.com">Access Grafana</a></p>
                    <span class="status online">Online</span>
                </div>
                
                <div class="service-card">
                    <h3>Client Management</h3>
                    <p>Multi-tenant client infrastructure management</p>
                    <p><a href="/clients">Manage Clients</a></p>
                    <span class="status online">Online</span>
                </div>
            </div>
        </div>
    </body>
    </html>