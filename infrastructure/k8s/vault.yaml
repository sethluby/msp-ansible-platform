apiVersion: v1
kind: Secret
metadata:
  name: vault-secrets
  namespace: msp-platform
type: Opaque
data:
  vault-root-token: # Base64 encoded root token
  vault-unseal-key: # Base64 encoded unseal key
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  namespace: msp-platform
data:
  vault.hcl: |
    ui = true
    
    listener "tcp" {
      address = "0.0.0.0:8200"
      cluster_address = "0.0.0.0:8201"
      tls_disable = false
      tls_cert_file = "/vault/tls/server.crt"
      tls_key_file = "/vault/tls/server.key"
      tls_client_ca_file = "/vault/tls/ca.crt"
      tls_min_version = "tls12"
    }
    
    storage "raft" {
      path = "/vault/data"
      node_id = "vault-HOSTNAME"
      
      retry_join {
        leader_api_addr = "https://vault-0.vault-internal:8200"
        leader_ca_cert_file = "/vault/tls/ca.crt"
        leader_client_cert_file = "/vault/tls/server.crt"
        leader_client_key_file = "/vault/tls/server.key"
      }
      
      retry_join {
        leader_api_addr = "https://vault-1.vault-internal:8200"
        leader_ca_cert_file = "/vault/tls/ca.crt"
        leader_client_cert_file = "/vault/tls/server.crt"
        leader_client_key_file = "/vault/tls/server.key"
      }
      
      retry_join {
        leader_api_addr = "https://vault-2.vault-internal:8200"
        leader_ca_cert_file = "/vault/tls/ca.crt"
        leader_client_cert_file = "/vault/tls/server.crt"
        leader_client_key_file = "/vault/tls/server.key"
      }
    }
    
    cluster_addr = "https://POD_IP:8201"
    api_addr = "https://POD_IP:8200"
    
    log_level = "INFO"
    log_format = "json"
    log_file = "/vault/logs/vault.log"
    
    seal "awskms" {
      region     = "us-west-2"
      kms_key_id = "arn:aws:kms:us-west-2:123456789012:key/12345678-1234-1234-1234-123456789012"
    }
    
    # Enable Prometheus metrics
    telemetry {
      prometheus_retention_time = "30s"
      disable_hostname = true
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vault-data-pvc
  namespace: msp-platform
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  namespace: msp-platform
spec:
  serviceName: vault-internal
  replicas: 3
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      securityContext:
        fsGroup: 100
      serviceAccountName: vault
      containers:
      - name: vault
        image: hashicorp/vault:latest
        env:
        - name: VAULT_ADDR
          value: "https://127.0.0.1:8200"
        - name: VAULT_API_ADDR
          value: "https://$(POD_IP):8200"
        - name: VAULT_CLUSTER_ADDR
          value: "https://$(POD_IP):8201"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: VAULT_LOG_LEVEL
          value: "INFO"
        - name: VAULT_LOG_FORMAT
          value: "json"
        args:
        - "sh"
        - "-c"
        - |
          sed -i "s/vault-HOSTNAME/$HOSTNAME/g" /vault/config/vault.hcl
          sed -i "s/POD_IP/$POD_IP/g" /vault/config/vault.hcl
          vault server -config=/vault/config/vault.hcl
        ports:
        - containerPort: 8200
          name: vault-port
        - containerPort: 8201
          name: vault-cluster
        - containerPort: 8220
          name: vault-metrics
        volumeMounts:
        - name: vault-data
          mountPath: /vault/data
        - name: vault-logs
          mountPath: /vault/logs
        - name: vault-config
          mountPath: /vault/config
        - name: vault-tls
          mountPath: /vault/tls
          readOnly: true
        livenessProbe:
          httpGet:
            path: /v1/sys/health?standbyok=true
            port: 8200
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /v1/sys/health?standbyok=true
            port: 8200
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 100
          capabilities:
            add:
            - IPC_LOCK
  volumeClaimTemplates:
  - metadata:
      name: vault-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      storageClassName: fast-ssd
  - metadata:
      name: vault-logs
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: fast-ssd
  volumes:
  - name: vault-config
    configMap:
      name: vault-config
  - name: vault-tls
    secret:
      secretName: vault-tls
---
apiVersion: v1
kind: Service
metadata:
  name: vault-internal
  namespace: msp-platform
spec:
  clusterIP: None
  selector:
    app: vault
  ports:
    - name: vault-port
      port: 8200
      targetPort: 8200
    - name: vault-cluster
      port: 8201
      targetPort: 8201
---
apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: msp-platform
spec:
  selector:
    app: vault
  ports:
    - name: vault-port
      port: 8200
      targetPort: 8200
    - name: vault-metrics
      port: 8220
      targetPort: 8220
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault
  namespace: msp-platform
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vault
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault
subjects:
- kind: ServiceAccount
  name: vault
  namespace: msp-platform