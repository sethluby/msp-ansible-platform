---
# CMMC System Validation Tasks
# Author: thndrchckn
# Purpose: Validate system requirements and CMMC control implementation status

- name: "Validation | Determine validation mode"
  ansible.builtin.set_fact:
    current_validation_mode: "{{ validation_mode | default('pre_implementation') }}"
  # Set validation mode to determine which checks to perform
  # Modes: pre_implementation, post_implementation, ongoing
  tags:
    - always

- name: "Validation | Display validation information"
  ansible.builtin.debug:
    msg:
      - "Running CMMC validation in {{ current_validation_mode }} mode"
      - "Target CMMC level: {{ cmmc_level }}"
      - "System: {{ ansible_hostname }} ({{ ansible_os_family }} {{ ansible_distribution_version }})"
  tags:
    - always

# Pre-Implementation System Requirements Validation
- name: "Pre-Implementation | Validate system requirements"
  tags:
    - cmmc_pre_validation
  when: current_validation_mode == 'pre_implementation'

  # Post-Implementation Control Validation
  block:
    - name: "Pre-Implementation | Check OS compatibility"
      ansible.builtin.assert:
        that:
          - ansible_os_family in cmmc_supported_os_families
          - ansible_distribution_version is version(cmmc_min_os_versions[ansible_os_family], '>=')
        fail_msg: "Unsupported OS: {{ ansible_distribution }} {{ ansible_distribution_version }}"
        success_msg: "OS compatibility confirmed: {{ ansible_distribution }} {{ ansible_distribution_version }}"
      # Verify operating system is supported for CMMC implementation

    - name: "Pre-Implementation | Check available disk space"
      ansible.builtin.assert:
        that:
          - ansible_mounts | selectattr('mount', 'equalto', '/') | map(attribute='size_available') | first > cmmc_min_disk_space
        fail_msg: "Insufficient disk space. Required: {{ cmmc_min_disk_space }} bytes"
        success_msg: "Sufficient disk space available"
      # Ensure adequate disk space for CMMC artifacts and logging

    - name: "Pre-Implementation | Check available memory"
      ansible.builtin.assert:
        that:
          - ansible_memtotal_mb > cmmc_min_memory_mb
        fail_msg: "Insufficient memory. Required: {{ cmmc_min_memory_mb }}MB, Available: {{ ansible_memtotal_mb }}MB"
        success_msg: "Sufficient memory available: {{ ansible_memtotal_mb }}MB"
      # Verify system has adequate memory for compliance tools

- name: "Post-Implementation | Validate CMMC control implementation"
  tags:
    - cmmc_post_validation
  when: current_validation_mode == 'post_implementation'

  block:
    - name: "Post-Implementation | Run compliance validator"
      ansible.builtin.command: "{{ local_bin_dir }}/cmmc_validator.py --config-dir {{ cmmc_base_dir }} --output json"
      register: compliance_validation
      changed_when: false
      failed_when: compliance_validation.rc != 0
      # Execute comprehensive compliance validation script

    - name: "Post-Implementation | Verify SSH configuration"
      ansible.builtin.command: sshd -t
      changed_when: false
      register: ssh_config_test
      when: cmmc_enable_access_control | bool

    - name: "Post-Implementation | Verify auditd service status"
      ansible.builtin.systemd:
        name: auditd
      register: auditd_status
      when: cmmc_enable_audit_accountability | bool

- name: "Validation | Display validation results"
  ansible.builtin.debug:
    msg:
      - "Validation completed for {{ current_validation_mode }} mode"
      - "Validator location: {{ local_bin_dir }}/cmmc_validator.py"
  tags:
    - always
