---
# CMMC Audit and Accountability (AU) Implementation
# Author: thndrchckn
# Purpose: Implement AU.1.006-012 controls for comprehensive audit logging and accountability

- name: "AU Controls | Display audit and accountability implementation start"
  debug:
    msg:
      - "Implementing CMMC Audit and Accountability (AU) controls"
      - "AU.1.006: Create and retain system audit records"
      - "AU.1.012: Provide audit record generation capability"
  # Inform operator of which AU controls are being implemented
  tags:
    - cmmc_au_info

# AU.1.006 - Create and retain information system audit records
- name: "AU.1.006 | Configure comprehensive audit logging"
  block:
    - name: "AU.1.006 | Install auditd package"
      package:
        name: "{{ audit_package_name }}"
        state: present
      # Install audit daemon for comprehensive system logging
      # Package name varies by distribution (auditd/audit)

    - name: "AU.1.006 | Backup original audit configuration"
      copy:
        src: /etc/audit/auditd.conf
        dest: "{{ cmmc_backup_dir }}/auditd.conf.backup.{{ ansible_date_time.epoch }}"
        remote_src: true
        owner: "{{ cmmc_default_owner }}"
        group: "{{ cmmc_default_group }}"
        mode: "{{ cmmc_private_file_mode }}"
      # Create timestamped backup for rollback capability

    - name: "AU.1.006 | Configure audit daemon settings"
      template:
        src: auditd.conf.j2
        dest: /etc/audit/auditd.conf
        owner: root
        group: root
        mode: '0640'
        backup: true
      notify: restart auditd
      # Deploy CMMC-compliant auditd configuration
      # Includes log rotation, retention, and storage settings

    - name: "AU.1.006 | Configure audit rules for CMMC compliance"
      template:
        src: audit.rules.j2
        dest: /etc/audit/rules.d/cmmc.rules
        owner: root
        group: root
        mode: '0640'
        backup: true
      notify: restart auditd
      # Deploy comprehensive audit rules covering:
      # - File system changes
      # - System calls
      # - Authentication events
      # - Privilege escalation
      # - Network connections

    - name: "AU.1.006 | Set audit log directory permissions"
      file:
        path: /var/log/audit
        state: directory
        owner: root
        group: root
        mode: '0750'
      # Secure audit log directory with restricted permissions

    - name: "AU.1.006 | Configure audit log retention policy"
      blockinfile:
        path: /etc/logrotate.d/audit
        create: true
        owner: root
        group: root
        mode: '0644'
        block: |
          /var/log/audit/*.log {
              {{ cmmc_au_log_rotation_frequency }}
              missingok
              rotate {{ cmmc_au_log_retention_count }}
              compress
              delaycompress
              notifempty
              create 0640 root root
              postrotate
                  /bin/kill -HUP `cat /var/run/auditd.pid 2> /dev/null` 2> /dev/null || true
              endscript
          }
      # Configure automatic log rotation with CMMC-compliant retention

  tags:
    - cmmc_au_006
    - cmmc_audit_config

# AU.1.012 - Provide audit record generation capability for events
- name: "AU.1.012 | Configure system audit event monitoring"
  block:
    - name: "AU.1.012 | Enable audit for authentication events"
      lineinfile:
        path: /etc/audit/rules.d/cmmc.rules
        line: "{{ item }}"
        create: true
        owner: root
        group: root
        mode: '0640'
      loop:
        - "# Authentication and authorization events"
        - "-w /etc/passwd -p wa -k identity"
        - "-w /etc/group -p wa -k identity"
        - "-w /etc/shadow -p wa -k identity"
        - "-w /etc/gshadow -p wa -k identity"
        - "-w /etc/security/opasswd -p wa -k identity"
        - "-w /etc/sudoers -p wa -k actions"
        - "-w /etc/sudoers.d/ -p wa -k actions"
      notify: restart auditd
      # Monitor critical authentication and authorization files

    - name: "AU.1.012 | Enable audit for system configuration changes"
      lineinfile:
        path: /etc/audit/rules.d/cmmc.rules
        line: "{{ item }}"
        owner: root
        group: root
        mode: '0640'
      loop:
        - "# System configuration changes"
        - "-w /etc/ssh/sshd_config -p wa -k ssh_config"
        - "-w /etc/hosts -p wa -k network_config"
        - "-w /etc/network/ -p wa -k network_config"
        - "-w /etc/issue -p wa -k system_config"
        - "-w /etc/issue.net -p wa -k system_config"
        - "-w /etc/hostname -p wa -k system_config"
        - "-w /etc/timezone -p wa -k system_config"
        - "-w /etc/localtime -p wa -k system_config"
      notify: restart auditd
      # Monitor system configuration file changes

    - name: "AU.1.012 | Enable audit for privileged commands"
      shell: |
        find /usr/bin /usr/sbin /bin /sbin -perm -4000 -o -perm -2000 2>/dev/null | \
        awk '{print "-a always,exit -F path=" $1 " -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged"}' >> /etc/audit/rules.d/cmmc.rules
      args:
        creates: /etc/audit/rules.d/.privileged_commands_added
      notify: restart auditd
      # Automatically discover and monitor all setuid/setgid executables

    - name: "AU.1.012 | Mark privileged commands audit rules as configured"
      file:
        path: /etc/audit/rules.d/.privileged_commands_added
        state: touch
        owner: root
        group: root
        mode: '0600'
      # Create marker file to prevent duplicate rule addition

    - name: "AU.1.012 | Enable audit for file system mount operations"
      lineinfile:
        path: /etc/audit/rules.d/cmmc.rules
        line: "{{ item }}"
        owner: root
        group: root
        mode: '0640'
      loop:
        - "# File system mount operations"
        - "-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts"
        - "-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts"
        - "-a always,exit -F arch=b64 -S umount2 -F auid>=1000 -F auid!=4294967295 -k mounts"
        - "-a always,exit -F arch=b32 -S umount -F auid>=1000 -F auid!=4294967295 -k mounts"
        - "-a always,exit -F arch=b32 -S umount2 -F auid>=1000 -F auid!=4294967295 -k mounts"
      notify: restart auditd
      # Monitor file system mount/unmount operations

    - name: "AU.1.012 | Enable audit for network configuration changes"
      lineinfile:
        path: /etc/audit/rules.d/cmmc.rules
        line: "{{ item }}"
        owner: root
        group: root
        mode: '0640'
      loop:
        - "# Network configuration changes"
        - "-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale"
        - "-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale"
        - "-w /etc/issue -p wa -k system-locale"
        - "-w /etc/issue.net -p wa -k system-locale"
        - "-w /etc/hosts -p wa -k system-locale"
        - "-w /etc/sysconfig/network -p wa -k system-locale"
      notify: restart auditd
      # Monitor network and hostname configuration changes

    - name: "AU.1.012 | Configure audit daemon startup"
      systemd:
        name: auditd
        state: started
        enabled: true
      # Ensure audit daemon starts on boot and is currently running

  tags:
    - cmmc_au_012
    - cmmc_audit_events

# Additional Audit Configuration
- name: "AU Controls | Configure audit log monitoring and alerting"
  block:
    - name: "AU Controls | Create audit log analysis script"
      template:
        src: analyze_audit_logs.sh.j2
        dest: "{{ local_bin_dir }}/analyze_audit_logs.sh"
        owner: root
        group: root
        mode: '0755'
      # Deploy script for automated audit log analysis and alerting

    - name: "AU Controls | Configure audit log monitoring cron job"
      cron:
        name: "CMMC audit log monitoring"
        minute: "{{ cmmc_au_monitoring_minute }}"
        hour: "{{ cmmc_au_monitoring_hour }}"
        job: "{{ local_bin_dir }}/analyze_audit_logs.sh >> {{ cmmc_security_log_dir }}/audit_analysis.log 2>&1"
        user: root
      when: cmmc_au_enable_monitoring | bool
      # Schedule regular audit log analysis for anomaly detection

    - name: "AU Controls | Create audit report generation script"
      template:
        src: generate_audit_report.py.j2
        dest: "{{ local_bin_dir }}/generate_audit_report.py"
        owner: root
        group: root
        mode: '0755'
      # Deploy Python script for generating comprehensive audit reports

    - name: "AU Controls | Configure SELinux for audit daemon (if enabled)"
      command: setsebool -P auditd_enable_home_dirs_auditing on
      when: 
        - ansible_selinux.status == "enabled"
        - cmmc_au_selinux_enable | bool
      failed_when: false
      # Configure SELinux to allow comprehensive auditing when enabled

  tags:
    - cmmc_au_monitoring
    - cmmc_audit_analysis

# Validation and Testing
- name: "AU Controls | Validate audit daemon configuration"
  command: auditctl -s
  register: audit_status
  changed_when: false
  failed_when: "'enabled' not in audit_status.stdout"
  # Verify audit daemon is properly configured and running

- name: "AU Controls | Test audit rule functionality"
  block:
    - name: "AU Controls | Create test file for audit verification"
      file:
        path: "{{ cmmc_validation_dir }}/audit_test_file"
        state: touch
        owner: root
        group: root
        mode: '0644'
      # Create test file to verify audit rules are working

    - name: "AU Controls | Modify test file to trigger audit event"
      lineinfile:
        path: "{{ cmmc_validation_dir }}/audit_test_file"
        line: "CMMC audit test - {{ ansible_date_time.iso8601 }}"
      # Modify file to generate audit events for testing

    - name: "AU Controls | Wait for audit event processing"
      pause:
        seconds: 2
      # Allow time for audit event to be processed and logged

    - name: "AU Controls | Verify audit event was logged"
      shell: ausearch -f "{{ cmmc_validation_dir }}/audit_test_file" -i | grep -c "type=PATH"
      register: audit_test_result
      changed_when: false
      failed_when: audit_test_result.stdout | int == 0
      # Verify that file modifications are being properly audited

    - name: "AU Controls | Clean up audit test file"
      file:
        path: "{{ cmmc_validation_dir }}/audit_test_file"
        state: absent
      # Remove test file after verification

  tags:
    - cmmc_au_validation
    - cmmc_audit_test

- name: "AU Controls | Create audit accountability validation script"
  template:
    src: validate_audit_accountability.sh.j2
    dest: "{{ cmmc_validation_dir }}/validate_audit_accountability.sh"
    owner: root
    group: root
    mode: '0755'
  # Deploy validation script for ongoing audit system verification
  # Enables independent validation during graceful disconnection

- name: "AU Controls | Log audit accountability implementation completion"
  lineinfile:
    path: "{{ cmmc_implementation_log_dir }}/implementation.log"
    line: "{{ ansible_date_time.iso8601 }} - Audit and Accountability (AU) controls implemented successfully"
    create: true
    owner: root
    group: root
    mode: '0644'
  # Log successful implementation for audit trail and troubleshooting
  # Provides timestamp record of compliance implementation