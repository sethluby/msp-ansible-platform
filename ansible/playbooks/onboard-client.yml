- name: 'MSP Platform: Client Onboarding Automation'
  hosts: localhost
  connection: local
  gather_facts: true
  become: true
  vars_prompt:
  - name: client_name
    prompt: Enter client name (lowercase, no spaces)
    private: false
  - name: client_domain
    prompt: Enter client domain (e.g., example.com)
    private: false
  - name: client_admin_email
    prompt: Enter client administrator email
    private: false
  - name: client_tier
    prompt: Select service tier [foundation/professional/enterprise]
    private: false
    default: foundation
  - name: vpn_enabled
    prompt: Enable WireGuard VPN? [yes/no]
    private: false
    default: 'yes'
  vars:
    client_id: '{{ range(10, 250) | random }}'
    onboarding_timestamp: '{{ ansible_date_time.iso8601 }}'
    msp_ansible_tower_url: https://{{ ansible_default_ipv4.address }}:8043
    msp_vault_url: https://{{ ansible_default_ipv4.address }}:8200
    msp_monitoring_url: https://{{ ansible_default_ipv4.address }}:3000
  tasks:
  - name: Display onboarding summary
    ansible.builtin.debug:
      msg: 'üöÄ MSP Platform Client Onboarding

        ================================

        Client: {{ client_name | title }}

        Domain: {{ client_domain }}

        Tier: {{ client_tier | title }}

        Admin: {{ client_admin_email }}

        VPN: {{ ''Enabled'' if (vpn_enabled | bool) else ''Disabled'' }}

        ID: {{ client_id }}

        Timestamp: {{ onboarding_timestamp }}

        '
  - name: Validate prerequisites
    tags:
    - validation
    - prerequisites
    ansible.builtin.include_tasks: ../roles/client-onboarding/tasks/validate_prerequisites.yml
  - name: Create client directory structure
    tags:
    - onboarding
    - setup
    vars:
      generate_ssh_keys: true
      backup_enabled: true
      monitoring_enabled: true
      notification_enabled: true
    ansible.builtin.include_role:
      name: client-onboarding
  - name: Initialize compliance frameworks
    when: compliance_frameworks is defined
    tags:
    - compliance
    - initialization
    vars:
      target_compliance:
      - CIS Benchmarks
      - '{{ ''CMMC Level 2'' if client_tier in [''professional'', ''enterprise''] else '''' }}'
      - '{{ ''DISA STIG'' if client_tier == ''enterprise'' else '''' }}'
      compliance_mode: initialize
    ansible.builtin.include_role:
      name: compliance-frameworks
  - name: Deploy MSP infrastructure components
    tags:
    - msp
    - infrastructure
    vars:
      deployment_mode: client_focused
      client_specific: true
    ansible.builtin.include_role:
      name: msp-infrastructure
  - name: Configure monitoring and alerting
    when: monitoring_enabled | default(true)
    tags:
    - monitoring
    - alerting
    ansible.builtin.include_tasks: ../roles/client-onboarding/tasks/deploy_monitoring.yml
  - name: Generate client documentation
    tags:
    - documentation
    - handover
    ansible.builtin.include_tasks: ../roles/client-onboarding/tasks/generate_documentation.yml
  - name: Validate complete setup
    tags:
    - validation
    - testing
    ansible.builtin.include_tasks: ../roles/client-onboarding/tasks/validate_setup.yml
  - name: Create onboarding summary report
    tags:
    - documentation
    - summary
    vars:
      onboarding_status: COMPLETED
      next_steps:
      - Review generated documentation
      - Test VPN connectivity
      - Add client hosts to inventory
      - Run initial compliance scan
      - Configure monitoring alerts
    ansible.builtin.template:
      src: ../roles/client-onboarding/templates/onboarding_report.md.j2
      dest: /opt/msp-platform/clients/{{ client_name }}/ONBOARDING_REPORT.md
      mode: '0644'
  - name: Send completion notifications
    when: notification_enabled | default(true)
    tags:
    - notification
    - completion
    ansible.builtin.include_tasks: ../roles/client-onboarding/tasks/send_notifications.yml
  handlers:
  - name: Restart wireguard
    when: vpn_enabled | bool
    ansible.builtin.systemd:
      name: wg-quick@{{ client_name }}
      state: restarted
      daemon_reload: true
  - name: Reload firewall
    ansible.builtin.systemd:
      name: firewalld
      state: reloaded
  post_tasks:
  - name: Display completion message
    ansible.builtin.debug:
      msg: '‚úÖ Client {{ client_name }} onboarding completed successfully!


        üìÅ Configuration Directory: /opt/msp-platform/clients/{{ client_name }}

        üîê SSH Key: /opt/msp-platform/clients/{{ client_name }}/keys/{{ client_name }}_id_ed25519

        {% if vpn_enabled | bool %}üåê VPN Config: /opt/msp-platform/clients/{{ client_name }}/certificates/{{ client_name }}-vpn.conf{% endif %}

        üìä Onboarding Report: /opt/msp-platform/clients/{{ client_name }}/ONBOARDING_REPORT.md


        Next Steps:

        1. Review the onboarding report

        {% if vpn_enabled | bool %}2. Deploy VPN configuration to client network{% endif %}

        3. Add client hosts to inventory

        4. Run initial security and compliance scans

        5. Configure monitoring and alerting


        Support: {{ client_admin_email }}

        MSP Platform: {{ msp_ansible_tower_url }}

        '
  - name: Log onboarding completion
    tags:
    - logging
    - audit
    ansible.builtin.lineinfile:
      path: /var/log/msp-platform/onboarding.log
      line: '{{ onboarding_timestamp }} | {{ client_name }} | {{ client_tier }} | {{ client_admin_email }} | SUCCESS'
      create: true
      mode: '0644'
